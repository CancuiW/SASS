//@mixin +name helps to unify the same(main) format for different section
@mixin banner{
  width: 100%;
  position: relative;
  color: white;
  .banner-content{
    position: absolute;
    top: 50px;
    width: 100%;
  }
  img{
    width: 100%;
  }
  span{
    font-size: $bannerHeading;
    display: block;
    text-transform: uppercase;
    font-weight: bold;
    @include mQ(3000px, 1200px){
      font-size: 68px;
    }
  }
  span.title{
    font-weight: normal;
    margin-bottom: 30px;
  }
  @include mQ(1200px){
    max-height: 640px;
    overflow: hidden;
  }
}

@mixin clearFix{
  &:after{
    content: "";
    display: block;
    clear: both;
  }
}
//$cols:numbers of columns  $mgn:the margin that each of the elements
//
@mixin grid($cols, $mgn){
  float: left;
  width: calc((100% - (($cols - 1) * $mgn)) / $cols);
  margin-right: $mgn;
  margin-bottom: $mgn;
  //get the last child on each row
  &:nth-child(#{$cols}n){
    margin-right: 0;
  }
}
// @mixin mQ for media query
// @content keyword represent the specifed content in SCSS


//multiple arguments will use If statements
@mixin mQ($args...){
  @if length($args) == 1{
    @media screen and (max-width: nth($args, 1)){
      
      @content;
    }
  }
  @if length($args) == 2{
    @media screen and (max-width: nth($args, 1)) and (min-width: nth($args, 2)){
      @content;
    }
  }
}
//only one argument 
// @mixin mQ($args) {
//   @media screen and (max-width:$args){
//     @content;
//   }

// }
